---
description: 
globs: 
alwaysApply: false
---
# GitHub Issue/PR テンプレート活用ルール

あなたはGitHubのIssueやPull Requestを作成する際に、プロジェクトで定義されたテンプレートを適切に参照し、統一された品質の高いIssue/PRを作成する責任があります。

## 原則

1. **テンプレートの完全準拠**: 定義されたテンプレート構造を必ず遵守する
2. **情報の完全性**: 必須項目は全て適切に記入する  
3. **一貫性の維持**: 誰が、いつ作成しても同じ品質を保つ
4. **明確性の追求**: 曖昧な表現を避け、具体的で理解しやすい内容にする

## テンプレート活用フロー

### Issue作成時

1. **Issue種別の特定**
   - バグ報告 → `bug_report.yml` を使用
   - 新機能要求 → `feature_request.yml` を使用
   - 既存機能改善 → `improvement.yml` を使用

2. **テンプレート内容の確認**
   ```
   [.github/ISSUE_TEMPLATE/bug_report.yml](mdc:.github/ISSUE_TEMPLATE/bug_report.yml)
   [.github/ISSUE_TEMPLATE/feature_request.yml](mdc:.github/ISSUE_TEMPLATE/feature_request.yml)
   [.github/ISSUE_TEMPLATE/improvement.yml](mdc:.github/ISSUE_TEMPLATE/improvement.yml)
   ```

3. **必須項目の完全記入**
   - 全ての `required: true` 項目を適切に記入
   - プレースホルダーを参考に具体的な内容を記述
   - チェックリストは全項目を確認してからチェック

4. **品質チェック**
   - 情報の正確性を確認
   - 再現可能性の確保（バグ報告の場合）
   - 実現可能性の検討（機能要求の場合）

### Pull Request作成時

1. **PRテンプレートの参照**
   ```
   [.github/pull_request_template.md](mdc:.github/pull_request_template.md)
   ```

2. **変更種別の明確化**
   - 適切な変更種別にチェックを入れる
   - 複数該当する場合は主要なものを選択

3. **詳細情報の記入**
   - 変更内容の具体的な説明
   - 技術的詳細の記述
   - テスト実施状況の正確な報告

4. **品質保証チェック**
   - 全チェックリスト項目の確認
   - 破壊的変更の有無の明確化
   - 適切なレビュアーの指定

## 記述品質ガイドライン

### 必須要件

1. **具体性**: 曖昧な表現を避け、具体的な情報を記載
2. **完全性**: テンプレートの全項目を適切に記入
3. **正確性**: 事実に基づいた正確な情報のみを記載
4. **一貫性**: プロジェクト内での表記統一

### 推奨事項

1. **視覚的情報**: 可能な限りスクリーンショットや図表を活用
2. **関連性**: 関連するIssue/PRへの適切なリンク
3. **追跡可能性**: 変更の経緯や背景の明確な記述
4. **将来対応**: 今後の改善予定や懸念事項の記載

## 運用ルール

### Issue作成のベストプラクティス

1. **作成前確認**
   - 既存Issueの重複チェック
   - 適切なテンプレート選択
   - 必要情報の事前収集

2. **内容記述**
   - テンプレート項目の完全記入
   - 具体的で再現可能な情報提供
   - 適切な優先度・ラベル設定

3. **作成後フォロー**
   - 追加情報の適時提供
   - ディスカッションへの積極参加

### PR作成のベストプラクティス

1. **作成前準備**
   - ローカルテストの完全実施
   - テンプレート項目の事前確認
   - 関連Issueの明確化

2. **内容記述**
   - 変更内容の詳細説明
   - テスト結果の正確な報告
   - チェックリストの完全確認

3. **レビュープロセス**
   - 適切なレビュアー指定
   - フィードバックへの迅速対応
   - 必要に応じた追加説明

## エラー防止策

### よくある間違い

1. **テンプレート項目の未記入**: 必須項目の記入漏れ
2. **曖昧な表現**: 具体性に欠ける記述
3. **関連情報の不足**: 環境情報や再現手順の欠如
4. **チェックリストの未確認**: 形式的なチェックのみ

### 品質確保手順

1. **記入前**: テンプレート全体の確認
2. **記入中**: 各項目の適切な記述
3. **記入後**: 全体の整合性チェック
4. **投稿前**: 最終品質確認

## 継続的改善

### テンプレート改善

1. **使用状況の監視**: テンプレート活用状況の確認
2. **課題の特定**: 記入漏れや不明確な項目の識別
3. **改善提案**: より良いテンプレートへの提案
4. **定期見直し**: プロジェクト成長に応じた更新

### 運用改善

1. **チーム共有**: テンプレート活用方法の共有
2. **フィードバック収集**: 使いやすさの改善点収集
3. **ベストプラクティス更新**: 経験に基づく改善
4. **教育・啓発**: 新メンバーへの適切な指導

---

## 実行時の確認事項

GitHub Issue/PR作成時は以下を必ず実行してください：

1. **テンプレート参照**: 該当するテンプレートファイルを確認
2. **項目完全記入**: 全必須項目の適切な記入
3. **品質チェック**: 記述内容の正確性・完全性確認
4. **最終確認**: 投稿前の全体整合性チェック

このルールに従うことで、プロジェクト全体でのIssue/PR品質の均一化と、効率的な開発プロセスを実現します。
